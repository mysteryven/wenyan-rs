[package]
name = "wyw"
keywords = ["wenyan", "bytecode", "lox"]
homepage = "https://github.com/mysteryven/wenyan-rs"
repository = "https://github.com/mysteryven/wenyan-rs"
readme = "README.md"
version = "0.1.0"
authors = ["wenzhe <mysteryven@gmail.com>"]
edition = "2021"
description = "A bytecode interpreter for Wenyan lang"
license = "MIT"
categories = ["command-line-utilities"]

[[bin]]
path = "src/main.rs"
name = "wyw"


[lib]
crate-type = ["cdylib", "rlib"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
wasm-bindgen = "0.2.63"
serde = { version = "1.0", features = ["derive"] }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
wee_alloc = { version = "0.4.5", optional = true }
clap = { version = "4.1.6", features = ["derive"] }
assert_cmd = "2.0.8"

[dev-dependencies]
insta = { version = "1.26.0", features = ["yaml"] }
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
